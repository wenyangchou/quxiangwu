<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.user.mapper.UserFollowMapper">

	<resultMap type="User" id="UserResult">
		<id     property="userId"       column="user_id"      />
		<result property="loginName"    column="login_name"   />
		<result property="userName"     column="user_name"    />
		<result property="email"        column="email"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="salt"         column="salt"         />
		<result property="status"       column="status"       />
		<result property="delFlag"      column="del_flag"     />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<result property="openId" column="open_id"/>
		<result property="city" column="city"/>
		<result property="country" column="country"/>
		<result property="language" column="language"/>
		<result property="province" column="province"/>
		<result property="isQualified" column="is_qualified"/>
		<result property="friendValue" column="friend_value"/>
		<result property="qualifyPositiveUrl" column="qualify_positive_url"/>
		<result property="qualifyNegativeUrl" column="qualify_negative_url"/>
		<result property="xianquMoney" column="xianqu_money"/>
		<result property="bornDate" column="born_date"/>
		<result property="usualResidence" column="usual_residence"/>
		<result property="industry" column="industry"/>
		<result property="jobTitle" column="job_title"/>
		<result property="educationExperience" column="educational_experience"/>
	</resultMap>

	<resultMap id="fanDTOResult" type="FansDTO">
		<result property="id" column="id"/>
		<result property="avatar" column="avatar"/>
		<result property="gender" column="sex"/>
		<result property="userName" column="user_name"/>
		<result property="jobName" column="job_name"/>
		<result property="fansNum" column="fans_num"/>
	</resultMap>

	<select id="getUserFollowDTO" parameterType="java.lang.Long" resultMap="fanDTOResult">
		SELECT
			su.user_id id ,
			su.avatar avatar ,
			su.sex sex ,
			su.user_name user_name ,
			su.job_title job_name ,
			sff.fans_num fans_num
		FROM
			service_follow sf
				LEFT JOIN sys_user su ON sf.followed_user_id = su.user_id
				LEFT JOIN(
				SELECT
					count(1) fans_num ,
					followed_user_id
				FROM
					service_follow
				GROUP BY
					followed_user_id
			) sff ON sf.followed_user_id = sff.followed_user_id
		WHERE
			sf.followed_user_id = #{userId}
	</select>

	<select id="getUserFansDTO" parameterType="java.lang.Long" resultMap="fanDTOResult">
		SELECT
			su.user_id id,
			su.avatar avatar,
			su.sex sex,
			su.user_name user_name,
			su.job_title job_name,
			sff.fans_num fans_num
		FROM
			service_follow sf
				LEFT JOIN sys_user su ON sf.follow_user_id = su.user_id
				LEFT JOIN(
				SELECT
					count(1) fans_num ,
					followed_user_id
				FROM
					service_follow
				GROUP BY
					followed_user_id
			) sff ON sf.follow_user_id = sff.followed_user_id
		WHERE
			sf.followed_user_id = #{userId}
	</select>

	<select id="getByUserIdAndFollowerId" resultType="java.lang.Long">
		SELECT
		id
		FROM service_follow
		WHERE followed_user_id=#{followerId} AND follow_user_id=#{userId}
	</select>

	<insert id="insertFollow">
		INSERT INTO service_follow (create_time,modify_time,followed_user_id,follow_user_id)
		VALUES (NOW(),NOW(),#{followerId},#{userId})
	</insert>

	<delete id="deleteFollow">
		DELETE FROM service_follow WHERE followed_user_id=#{followerId} AND follow_user_id=#{userId}
	</delete>

	<select id="getUserFollower" resultMap="UserResult" parameterType="java.lang.Long">
		SELECT
			u.user_id,  u.login_name, u.user_name, u.email, u.phonenumber, u.sex, u.avatar, u.password, u.salt, u.status, u.del_flag, u.login_ip, u.login_date, u.create_time, u.remark,u.open_id,u.city,u.country,u.language,u.province,u.is_qualified,u.friend_value,u.qualify_positive_url,u.qualify_negative_url,u.xianqu_money,u.born_date,u.usual_residence,u.industry,u.job_title,u.educational_experience
		FROM
			sys_user u JOIN
			service_follow sf
		ON
			u.user_id = sf.followed_user_id
		WHERE
		 	sf.follow_user_id=#{userId}
	</select>

	<select id="getUserFans" resultMap="UserResult" parameterType="java.lang.Long">
		SELECT
			u.user_id,  u.login_name, u.user_name, u.email, u.phonenumber, u.sex, u.avatar, u.password, u.salt, u.status, u.del_flag, u.login_ip, u.login_date, u.create_time, u.remark,u.open_id,u.city,u.country,u.language,u.province,u.is_qualified,u.friend_value,u.qualify_positive_url,u.qualify_negative_url,u.xianqu_money,u.born_date,u.usual_residence,u.industry,u.job_title,u.educational_experience
		FROM
			sys_user u JOIN
			service_follow sf
		ON
			u.user_id = sf.followed_user_id
		WHERE
			sf.followed_user_id=#{userId}
	</select>

	<select id="userFansNumber" parameterType="java.lang.Long" resultType="java.lang.Long">
		SELECT COUNT(1) FROM service_follow WHERE followed_user_id = #{userId}
	</select>

	<select id="userFollowNumber" parameterType="java.lang.Long" resultType="java.lang.Long">
		SELECT COUNT(1) FROM service_follow WHERE follow_user_id = #{userId}
	</select>

</mapper> 